#!/usr/bin/env bpftrace

usdt:/usr/local/lib/libevent.so:base_loop___dispatch___start
{
    // arg0 == struct event_base;

    @dispatch_start[arg0] = nsecs;
}

usdt:/usr/local/lib/libevent.so:base_loop___dispatch___end
/ @dispatch_start[arg0] /
{
    $delta = (nsecs - @dispatch_start[arg0]) / 1000;
    
    @dispatch_latency[arg0] = hist($delta);

    delete(@dispatch_start[arg0]);
}

usdt:/usr/local/lib/libevent.so:base_loop___process_active___start
{
    // arg0 == event_base
    @proc_active_start[arg0] = nsecs;
}

usdt:/usr/local/lib/libevent.so:base_loop___process_active___end
/ @proc_active_start[arg0] /
{
    $delta2 = (nsecs - @proc_active_start[arg0]) / 1000;

    @proc_active_latency[arg0] = hist($delta2);

    delete(@proc_active_start[arg0]);
}

interval:s:1
{
    printf("event_base_loop inner-dispatch latency\n");

    print(@dispatch_latency);
    clear(@dispatch_latency);

    printf("event_base_loop inner-process_active latency\n");
    print(@proc_active_latency);
    clear(@proc_active_latency);
}
